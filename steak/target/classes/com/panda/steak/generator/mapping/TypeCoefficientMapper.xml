<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.panda.steak.generator.dao.TypeCoefficientMapper" >
  <resultMap id="BaseResultMap" type="com.panda.steak.generator.model.TypeCoefficient" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="coefficient" property="coefficient" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type_id, coefficient, status, remarks, create_time, modify_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from type_coefficient
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from type_coefficient
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.panda.steak.generator.model.TypeCoefficient" >
    insert into type_coefficient (id, type_id, coefficient, 
      status, remarks, create_time, 
      modify_time)
    values (#{id,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{coefficient,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.panda.steak.generator.model.TypeCoefficient" >
    insert into type_coefficient
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="coefficient != null" >
        coefficient,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="coefficient != null" >
        #{coefficient,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.panda.steak.generator.model.TypeCoefficient" >
    update type_coefficient
    <set >
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="coefficient != null" >
        coefficient = #{coefficient,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.panda.steak.generator.model.TypeCoefficient" >
    update type_coefficient
    set type_id = #{typeId,jdbcType=INTEGER},
      coefficient = #{coefficient,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>